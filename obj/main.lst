                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _gbCountdownSeconds
                                     13 	.globl _scene1Update
                                     14 	.globl _scene1Start
                                     15 	.globl _time
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area _DATA
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area _INITIALIZED
                                     27 ;--------------------------------------------------------
                                     28 ; absolute external ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area _DABS (ABS)
                                     31 ;--------------------------------------------------------
                                     32 ; global & static initialisations
                                     33 ;--------------------------------------------------------
                                     34 	.area _HOME
                                     35 	.area _GSINIT
                                     36 	.area _GSFINAL
                                     37 	.area _GSINIT
                                     38 ;--------------------------------------------------------
                                     39 ; Home
                                     40 ;--------------------------------------------------------
                                     41 	.area _HOME
                                     42 	.area _HOME
                                     43 ;--------------------------------------------------------
                                     44 ; code
                                     45 ;--------------------------------------------------------
                                     46 	.area _CODE
                                     47 ;src/utils.h:8: static void copy_U8_array(uint8_t *dest, const uint8_t* source, uint8_t size)
                                     48 ;	---------------------------------
                                     49 ; Function copy_U8_array
                                     50 ; ---------------------------------
      000000                         51 _copy_U8_array:
      000000 E8 FB            [16]   52 	add	sp, #-5
      000002 F8 02            [12]   53 	ldhl	sp,	#2
      000004 7B               [ 4]   54 	ld	a, e
      000005 22               [ 8]   55 	ld	(hl+), a
      000006 72               [ 8]   56 	ld	(hl), d
      000007 33               [ 8]   57 	inc	sp
      000008 33               [ 8]   58 	inc	sp
      000009 C5               [16]   59 	push	bc
                                     60 ;src/utils.h:10: while (size != 0)
      00000A F8 07            [12]   61 	ldhl	sp,	#7
      00000C 7E               [ 8]   62 	ld	a, (hl)
      00000D F8 04            [12]   63 	ldhl	sp,	#4
      00000F 77               [ 8]   64 	ld	(hl), a
      000010                         65 00101$:
      000010 F8 04            [12]   66 	ldhl	sp,	#4
      000012 7E               [ 8]   67 	ld	a, (hl)
      000013 B7               [ 4]   68 	or	a, a
      000014 28 17            [12]   69 	jr	Z, 00104$
                                     70 ;src/utils.h:12: dest[size-1] = source[size-1];
      000016 3A               [ 8]   71 	ld	a, (hl-)
      000017 4F               [ 4]   72 	ld	c, a
      000018 06 00            [ 8]   73 	ld	b, #0x00
      00001A 0B               [ 8]   74 	dec	bc
      00001B 3A               [ 8]   75 	ld	a, (hl-)
      00001C 6E               [ 8]   76 	ld	l, (hl)
      00001D 67               [ 4]   77 	ld	h, a
      00001E 09               [ 8]   78 	add	hl, bc
      00001F 5D               [ 4]   79 	ld	e, l
      000020 54               [ 4]   80 	ld	d, h
      000021 E1               [12]   81 	pop	hl
      000022 E5               [16]   82 	push	hl
      000023 09               [ 8]   83 	add	hl, bc
      000024 4D               [ 4]   84 	ld	c, l
      000025 44               [ 4]   85 	ld	b, h
      000026 0A               [ 8]   86 	ld	a, (bc)
      000027 12               [ 8]   87 	ld	(de), a
                                     88 ;src/utils.h:13: --size;
      000028 F8 04            [12]   89 	ldhl	sp,	#4
      00002A 35               [12]   90 	dec	(hl)
      00002B 18 E3            [12]   91 	jr	00101$
      00002D                         92 00104$:
                                     93 ;src/utils.h:15: }
      00002D E8 05            [16]   94 	add	sp, #5
      00002F E1               [12]   95 	pop	hl
      000030 33               [ 8]   96 	inc	sp
      000031 E9               [ 4]   97 	jp	(hl)
                                     98 ;src/utils.h:17: static void* memcpy(void *dest, const void *source, uint16_t size)
                                     99 ;	---------------------------------
                                    100 ; Function memcpy
                                    101 ; ---------------------------------
      000032                        102 _memcpy:
      000032 E8 F8            [16]  103 	add	sp, #-8
      000034 F8 06            [12]  104 	ldhl	sp,	#6
      000036 7B               [ 4]  105 	ld	a, e
      000037 22               [ 8]  106 	ld	(hl+), a
                                    107 ;src/utils.h:19: uint8_t*        dest_u8 = dest;
      000038 7A               [ 4]  108 	ld	a, d
      000039 32               [ 8]  109 	ld	(hl-), a
      00003A 7E               [ 8]  110 	ld	a, (hl)
      00003B F8 00            [12]  111 	ldhl	sp,	#0
      00003D 77               [ 8]  112 	ld	(hl), a
      00003E F8 07            [12]  113 	ldhl	sp,	#7
      000040 7E               [ 8]  114 	ld	a, (hl)
      000041 F8 01            [12]  115 	ldhl	sp,	#1
                                    116 ;src/utils.h:20: const uint8_t*  src_u8  = source;
      000043 22               [ 8]  117 	ld	(hl+), a
      000044 79               [ 4]  118 	ld	a, c
      000045 22               [ 8]  119 	ld	(hl+), a
      000046 70               [ 8]  120 	ld	(hl), b
                                    121 ;src/utils.h:22: while (size)
      000047 F8 0A            [12]  122 	ldhl	sp,	#10
      000049 2A               [ 8]  123 	ld	a, (hl+)
      00004A 4F               [ 4]  124 	ld	c, a
      00004B 46               [ 8]  125 	ld	b, (hl)
      00004C                        126 00101$:
      00004C 78               [ 4]  127 	ld	a, b
      00004D B1               [ 4]  128 	or	a, c
      00004E 28 29            [12]  129 	jr	Z, 00103$
                                    130 ;src/utils.h:24: dest_u8[size-1] = src_u8[size-1];
      000050 59               [ 4]  131 	ld	e, c
      000051 50               [ 4]  132 	ld	d, b
      000052 1B               [ 8]  133 	dec	de
      000053 D5               [16]  134 	push	de
      000054 F8 02            [12]  135 	ldhl	sp,	#2
      000056 2A               [ 8]  136 	ld	a,	(hl+)
      000057 66               [ 8]  137 	ld	h, (hl)
      000058 6F               [ 4]  138 	ld	l, a
      000059 19               [ 8]  139 	add	hl, de
      00005A D1               [12]  140 	pop	de
      00005B E5               [16]  141 	push	hl
      00005C 7D               [ 4]  142 	ld	a, l
      00005D F8 06            [12]  143 	ldhl	sp,	#6
      00005F 77               [ 8]  144 	ld	(hl), a
      000060 E1               [12]  145 	pop	hl
      000061 7C               [ 4]  146 	ld	a, h
      000062 F8 05            [12]  147 	ldhl	sp,	#5
      000064 77               [ 8]  148 	ld	(hl), a
      000065 F8 02            [12]  149 	ldhl	sp,	#2
      000067 2A               [ 8]  150 	ld	a,	(hl+)
      000068 66               [ 8]  151 	ld	h, (hl)
      000069 6F               [ 4]  152 	ld	l, a
      00006A 19               [ 8]  153 	add	hl, de
      00006B 5D               [ 4]  154 	ld	e, l
      00006C 54               [ 4]  155 	ld	d, h
      00006D 1A               [ 8]  156 	ld	a, (de)
      00006E F8 04            [12]  157 	ldhl	sp,	#4
      000070 F5               [16]  158 	push	af
      000071 2A               [ 8]  159 	ld	a,	(hl+)
      000072 66               [ 8]  160 	ld	h, (hl)
      000073 6F               [ 4]  161 	ld	l, a
      000074 F1               [12]  162 	pop	af
      000075 77               [ 8]  163 	ld	(hl), a
                                    164 ;src/utils.h:25: --size;
      000076 0B               [ 8]  165 	dec	bc
      000077 18 D3            [12]  166 	jr	00101$
      000079                        167 00103$:
                                    168 ;src/utils.h:28: return dest;
      000079 F8 06            [12]  169 	ldhl	sp,	#6
      00007B 2A               [ 8]  170 	ld	a, (hl+)
      00007C 4F               [ 4]  171 	ld	c, a
      00007D 46               [ 8]  172 	ld	b, (hl)
                                    173 ;src/utils.h:29: }
      00007E E8 08            [16]  174 	add	sp, #8
      000080 E1               [12]  175 	pop	hl
      000081 F1               [12]  176 	pop	af
      000082 E9               [ 4]  177 	jp	(hl)
                                    178 ;src/main.c:11: U8 gbCountdownSeconds(U8 max_time, U8 start_time)
                                    179 ;	---------------------------------
                                    180 ; Function gbCountdownSeconds
                                    181 ; ---------------------------------
      000083                        182 _gbCountdownSeconds::
      000083 6F               [ 4]  183 	ld	l, a
                                    184 ;	spillPairReg hl
                                    185 ;	spillPairReg hl
                                    186 ;src/main.c:13: return max_time - ((time(NULL)-start_time) % (max_time+1));
      000084 E5               [16]  187 	push	hl
      000085 D5               [16]  188 	push	de
      000086 11 00 00         [12]  189 	ld	de, #0x0000
      000089 CDr00r00         [24]  190 	call	_time
      00008C D1               [12]  191 	pop	de
      00008D E1               [12]  192 	pop	hl
      00008E 79               [ 4]  193 	ld	a, c
      00008F 16 00            [ 8]  194 	ld	d, #0x00
      000091 93               [ 4]  195 	sub	a, e
      000092 5F               [ 4]  196 	ld	e, a
      000093 78               [ 4]  197 	ld	a, b
      000094 9A               [ 4]  198 	sbc	a, d
      000095 57               [ 4]  199 	ld	d, a
      000096 4D               [ 4]  200 	ld	c, l
      000097 06 00            [ 8]  201 	ld	b, #0x00
      000099 03               [ 8]  202 	inc	bc
      00009A E5               [16]  203 	push	hl
      00009B CDr00r00         [24]  204 	call	__moduint
      00009E E1               [12]  205 	pop	hl
      00009F 7D               [ 4]  206 	ld	a, l
      0000A0 91               [ 4]  207 	sub	a, c
                                    208 ;src/main.c:14: }
      0000A1 C9               [16]  209 	ret
                                    210 ;src/main.c:16: void main()
                                    211 ;	---------------------------------
                                    212 ; Function main
                                    213 ; ---------------------------------
      0000A2                        214 _main::
                                    215 ;src/main.c:18: scene1Start();
      0000A2 CDr00r00         [24]  216 	call	_scene1Start
                                    217 ;src/main.c:19: scene1Update();
                                    218 ;src/main.c:20: }
      0000A5 C3r00r00         [16]  219 	jp	_scene1Update
                                    220 	.area _CODE
                                    221 	.area _INITIALIZER
                                    222 	.area _CABS (ABS)
