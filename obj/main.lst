                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _scene1Update
                                     13 	.globl _scene1Start
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area _DATA
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _INITIALIZED
                                     25 ;--------------------------------------------------------
                                     26 ; absolute external ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _DABS (ABS)
                                     29 ;--------------------------------------------------------
                                     30 ; global & static initialisations
                                     31 ;--------------------------------------------------------
                                     32 	.area _HOME
                                     33 	.area _GSINIT
                                     34 	.area _GSFINAL
                                     35 	.area _GSINIT
                                     36 ;--------------------------------------------------------
                                     37 ; Home
                                     38 ;--------------------------------------------------------
                                     39 	.area _HOME
                                     40 	.area _HOME
                                     41 ;--------------------------------------------------------
                                     42 ; code
                                     43 ;--------------------------------------------------------
                                     44 	.area _CODE
                                     45 ;src/utils.h:8: static void copy_U8_array(uint8_t *dest, const uint8_t* source, uint8_t size)
                                     46 ;	---------------------------------
                                     47 ; Function copy_U8_array
                                     48 ; ---------------------------------
      000000                         49 _copy_U8_array:
      000000 E8 FB            [16]   50 	add	sp, #-5
      000002 F8 02            [12]   51 	ldhl	sp,	#2
      000004 7B               [ 4]   52 	ld	a, e
      000005 22               [ 8]   53 	ld	(hl+), a
      000006 72               [ 8]   54 	ld	(hl), d
      000007 33               [ 8]   55 	inc	sp
      000008 33               [ 8]   56 	inc	sp
      000009 C5               [16]   57 	push	bc
                                     58 ;src/utils.h:10: while (size != 0)
      00000A F8 07            [12]   59 	ldhl	sp,	#7
      00000C 7E               [ 8]   60 	ld	a, (hl)
      00000D F8 04            [12]   61 	ldhl	sp,	#4
      00000F 77               [ 8]   62 	ld	(hl), a
      000010                         63 00101$:
      000010 F8 04            [12]   64 	ldhl	sp,	#4
      000012 7E               [ 8]   65 	ld	a, (hl)
      000013 B7               [ 4]   66 	or	a, a
      000014 28 17            [12]   67 	jr	Z, 00104$
                                     68 ;src/utils.h:12: dest[size-1] = source[size-1];
      000016 3A               [ 8]   69 	ld	a, (hl-)
      000017 4F               [ 4]   70 	ld	c, a
      000018 06 00            [ 8]   71 	ld	b, #0x00
      00001A 0B               [ 8]   72 	dec	bc
      00001B 3A               [ 8]   73 	ld	a, (hl-)
      00001C 6E               [ 8]   74 	ld	l, (hl)
      00001D 67               [ 4]   75 	ld	h, a
      00001E 09               [ 8]   76 	add	hl, bc
      00001F 5D               [ 4]   77 	ld	e, l
      000020 54               [ 4]   78 	ld	d, h
      000021 E1               [12]   79 	pop	hl
      000022 E5               [16]   80 	push	hl
      000023 09               [ 8]   81 	add	hl, bc
      000024 4D               [ 4]   82 	ld	c, l
      000025 44               [ 4]   83 	ld	b, h
      000026 0A               [ 8]   84 	ld	a, (bc)
      000027 12               [ 8]   85 	ld	(de), a
                                     86 ;src/utils.h:13: --size;
      000028 F8 04            [12]   87 	ldhl	sp,	#4
      00002A 35               [12]   88 	dec	(hl)
      00002B 18 E3            [12]   89 	jr	00101$
      00002D                         90 00104$:
                                     91 ;src/utils.h:15: }
      00002D E8 05            [16]   92 	add	sp, #5
      00002F E1               [12]   93 	pop	hl
      000030 33               [ 8]   94 	inc	sp
      000031 E9               [ 4]   95 	jp	(hl)
                                     96 ;src/utils.h:17: static void* memcpy(void *dest, const void *source, uint16_t size)
                                     97 ;	---------------------------------
                                     98 ; Function memcpy
                                     99 ; ---------------------------------
      000032                        100 _memcpy:
      000032 E8 F8            [16]  101 	add	sp, #-8
      000034 F8 06            [12]  102 	ldhl	sp,	#6
      000036 7B               [ 4]  103 	ld	a, e
      000037 22               [ 8]  104 	ld	(hl+), a
                                    105 ;src/utils.h:19: uint8_t*        dest_u8 = dest;
      000038 7A               [ 4]  106 	ld	a, d
      000039 32               [ 8]  107 	ld	(hl-), a
      00003A 7E               [ 8]  108 	ld	a, (hl)
      00003B F8 00            [12]  109 	ldhl	sp,	#0
      00003D 77               [ 8]  110 	ld	(hl), a
      00003E F8 07            [12]  111 	ldhl	sp,	#7
      000040 7E               [ 8]  112 	ld	a, (hl)
      000041 F8 01            [12]  113 	ldhl	sp,	#1
                                    114 ;src/utils.h:20: const uint8_t*  src_u8  = source;
      000043 22               [ 8]  115 	ld	(hl+), a
      000044 79               [ 4]  116 	ld	a, c
      000045 22               [ 8]  117 	ld	(hl+), a
      000046 70               [ 8]  118 	ld	(hl), b
                                    119 ;src/utils.h:22: while (size)
      000047 F8 0A            [12]  120 	ldhl	sp,	#10
      000049 2A               [ 8]  121 	ld	a, (hl+)
      00004A 4F               [ 4]  122 	ld	c, a
      00004B 46               [ 8]  123 	ld	b, (hl)
      00004C                        124 00101$:
      00004C 78               [ 4]  125 	ld	a, b
      00004D B1               [ 4]  126 	or	a, c
      00004E 28 29            [12]  127 	jr	Z, 00103$
                                    128 ;src/utils.h:24: dest_u8[size-1] = src_u8[size-1];
      000050 59               [ 4]  129 	ld	e, c
      000051 50               [ 4]  130 	ld	d, b
      000052 1B               [ 8]  131 	dec	de
      000053 D5               [16]  132 	push	de
      000054 F8 02            [12]  133 	ldhl	sp,	#2
      000056 2A               [ 8]  134 	ld	a,	(hl+)
      000057 66               [ 8]  135 	ld	h, (hl)
      000058 6F               [ 4]  136 	ld	l, a
      000059 19               [ 8]  137 	add	hl, de
      00005A D1               [12]  138 	pop	de
      00005B E5               [16]  139 	push	hl
      00005C 7D               [ 4]  140 	ld	a, l
      00005D F8 06            [12]  141 	ldhl	sp,	#6
      00005F 77               [ 8]  142 	ld	(hl), a
      000060 E1               [12]  143 	pop	hl
      000061 7C               [ 4]  144 	ld	a, h
      000062 F8 05            [12]  145 	ldhl	sp,	#5
      000064 77               [ 8]  146 	ld	(hl), a
      000065 F8 02            [12]  147 	ldhl	sp,	#2
      000067 2A               [ 8]  148 	ld	a,	(hl+)
      000068 66               [ 8]  149 	ld	h, (hl)
      000069 6F               [ 4]  150 	ld	l, a
      00006A 19               [ 8]  151 	add	hl, de
      00006B 5D               [ 4]  152 	ld	e, l
      00006C 54               [ 4]  153 	ld	d, h
      00006D 1A               [ 8]  154 	ld	a, (de)
      00006E F8 04            [12]  155 	ldhl	sp,	#4
      000070 F5               [16]  156 	push	af
      000071 2A               [ 8]  157 	ld	a,	(hl+)
      000072 66               [ 8]  158 	ld	h, (hl)
      000073 6F               [ 4]  159 	ld	l, a
      000074 F1               [12]  160 	pop	af
      000075 77               [ 8]  161 	ld	(hl), a
                                    162 ;src/utils.h:25: --size;
      000076 0B               [ 8]  163 	dec	bc
      000077 18 D3            [12]  164 	jr	00101$
      000079                        165 00103$:
                                    166 ;src/utils.h:28: return dest;
      000079 F8 06            [12]  167 	ldhl	sp,	#6
      00007B 2A               [ 8]  168 	ld	a, (hl+)
      00007C 4F               [ 4]  169 	ld	c, a
      00007D 46               [ 8]  170 	ld	b, (hl)
                                    171 ;src/utils.h:29: }
      00007E E8 08            [16]  172 	add	sp, #8
      000080 E1               [12]  173 	pop	hl
      000081 F1               [12]  174 	pop	af
      000082 E9               [ 4]  175 	jp	(hl)
                                    176 ;src/main.c:11: void main()
                                    177 ;	---------------------------------
                                    178 ; Function main
                                    179 ; ---------------------------------
      000083                        180 _main::
                                    181 ;src/main.c:13: scene1Start();
      000083 CDr00r00         [24]  182 	call	_scene1Start
                                    183 ;src/main.c:14: scene1Update();
                                    184 ;src/main.c:15: }
      000086 C3r00r00         [16]  185 	jp	_scene1Update
                                    186 	.area _CODE
                                    187 	.area _INITIALIZER
                                    188 	.area _CABS (ABS)
