                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _gbCountdownSeconds
                                     13 	.globl _gbPrintTiles
                                     14 	.globl _gbInitTiles
                                     15 	.globl _time
                                     16 	.globl _rand
                                     17 	.globl _initrand
                                     18 	.globl _printf
                                     19 	.globl _putchar
                                     20 	.globl _joypad
                                     21 ;--------------------------------------------------------
                                     22 ; special function registers
                                     23 ;--------------------------------------------------------
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DATA
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _INITIALIZED
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DABS (ABS)
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area _HOME
                                     40 	.area _GSINIT
                                     41 	.area _GSFINAL
                                     42 	.area _GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area _HOME
                                     47 	.area _HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area _CODE
                                     52 ;src/main.c:41: void gbInitTiles(GbGameState *pState)
                                     53 ;	---------------------------------
                                     54 ; Function gbInitTiles
                                     55 ; ---------------------------------
      000000                         56 _gbInitTiles::
      000000 4B               [ 4]   57 	ld	c, e
      000001 42               [ 4]   58 	ld	b, d
                                     59 ;src/main.c:44: GB_ITERATE_MAP(i, GB_FUNCTION_BODY(
      000002 1E 00            [ 8]   60 	ld	e, #0x00
      000004                         61 00106$:
      000004 7B               [ 4]   62 	ld	a, e
      000005 E6 07            [ 8]   63 	and	a, #0x07
      000007 6B               [ 4]   64 	ld	l, e
                                     65 ;	spillPairReg hl
                                     66 ;	spillPairReg hl
      000008 CB 3D            [ 8]   67 	srl	l
      00000A CB 3D            [ 8]   68 	srl	l
      00000C CB 3D            [ 8]   69 	srl	l
      00000E D6 06            [ 8]   70 	sub	a, #0x06
      000010 30 0B            [12]   71 	jr	NC, 00104$
      000012 7D               [ 4]   72 	ld	a, l
      000013 D6 08            [ 8]   73 	sub	a, #0x08
      000015 30 06            [12]   74 	jr	NC, 00104$
      000017 6B               [ 4]   75 	ld	l, e
      000018 26 00            [ 8]   76 	ld	h, #0x00
      00001A 09               [ 8]   77 	add	hl, bc
      00001B 36 57            [12]   78 	ld	(hl), #0x57
      00001D                         79 00104$:
      00001D 1C               [ 4]   80 	inc	e
      00001E 7B               [ 4]   81 	ld	a, e
      00001F D6 40            [ 8]   82 	sub	a, #0x40
      000021 38 E1            [12]   83 	jr	C, 00106$
                                     84 ;src/main.c:47: }
      000023 C9               [16]   85 	ret
                                     86 ;src/main.c:49: void gbPrintTiles(GbGameState *pState)
                                     87 ;	---------------------------------
                                     88 ; Function gbPrintTiles
                                     89 ; ---------------------------------
      000024                         90 _gbPrintTiles::
      000024 3B               [ 8]   91 	dec	sp
      000025 3B               [ 8]   92 	dec	sp
                                     93 ;src/main.c:52: GB_ITERATE_MAP(i, GB_FUNCTION_BODY(
      000026 F8 01            [12]   94 	ldhl	sp,	#1
      000028 36 00            [12]   95 	ld	(hl), #0x00
      00002A                         96 00108$:
      00002A F8 01            [12]   97 	ldhl	sp,	#1
      00002C 3A               [ 8]   98 	ld	a, (hl-)
      00002D E6 07            [ 8]   99 	and	a, #0x07
      00002F 22               [ 8]  100 	ld	(hl+), a
      000030 3A               [ 8]  101 	ld	a, (hl-)
      000031 4F               [ 4]  102 	ld	c, a
      000032 CB 39            [ 8]  103 	srl	c
      000034 CB 39            [ 8]  104 	srl	c
      000036 CB 39            [ 8]  105 	srl	c
      000038 7E               [ 8]  106 	ld	a, (hl)
      000039 D6 06            [ 8]  107 	sub	a, #0x06
      00003B 30 3C            [12]  108 	jr	NC, 00106$
      00003D 79               [ 4]  109 	ld	a, c
      00003E D6 08            [ 8]  110 	sub	a, #0x08
      000040 30 37            [12]  111 	jr	NC, 00106$
      000042 23               [ 8]  112 	inc	hl
      000043 D5               [16]  113 	push	de
      000044 6E               [ 8]  114 	ld	l, (hl)
      000045 26 00            [ 8]  115 	ld	h, #0x00
      000047 19               [ 8]  116 	add	hl, de
      000048 D1               [12]  117 	pop	de
      000049 4D               [ 4]  118 	ld	c, l
      00004A 44               [ 4]  119 	ld	b, h
      00004B 0A               [ 8]  120 	ld	a, (bc)
      00004C 4F               [ 4]  121 	ld	c, a
      00004D 06 00            [ 8]  122 	ld	b, #0x00
      00004F D5               [16]  123 	push	de
      000050 C5               [16]  124 	push	bc
      000051 01r84r00         [12]  125 	ld	bc, #___str_0
      000054 C5               [16]  126 	push	bc
      000055 CDr00r00         [24]  127 	call	_printf
      000058 E8 04            [16]  128 	add	sp, #4
      00005A D1               [12]  129 	pop	de
      00005B F8 00            [12]  130 	ldhl	sp,	#0
      00005D 6E               [ 8]  131 	ld	l, (hl)
                                    132 ;	spillPairReg hl
                                    133 ;	spillPairReg hl
      00005E 26 00            [ 8]  134 	ld	h, #0x00
                                    135 ;	spillPairReg hl
                                    136 ;	spillPairReg hl
      000060 23               [ 8]  137 	inc	hl
      000061 D5               [16]  138 	push	de
      000062 01 06 00         [12]  139 	ld	bc, #0x0006
      000065 5D               [ 4]  140 	ld	e, l
      000066 54               [ 4]  141 	ld	d, h
      000067 CDr00r00         [24]  142 	call	__modsint
      00006A D1               [12]  143 	pop	de
      00006B 78               [ 4]  144 	ld	a, b
      00006C B1               [ 4]  145 	or	a, c
      00006D 20 0A            [12]  146 	jr	NZ, 00106$
      00006F D5               [16]  147 	push	de
      000070 3E 0A            [ 8]  148 	ld	a, #0x0a
      000072 F5               [16]  149 	push	af
      000073 33               [ 8]  150 	inc	sp
      000074 CDr00r00         [24]  151 	call	_putchar
      000077 33               [ 8]  152 	inc	sp
      000078 D1               [12]  153 	pop	de
      000079                        154 00106$:
      000079 F8 01            [12]  155 	ldhl	sp,	#1
      00007B 34               [12]  156 	inc	(hl)
      00007C 7E               [ 8]  157 	ld	a, (hl)
      00007D D6 40            [ 8]  158 	sub	a, #0x40
      00007F 38 A9            [12]  159 	jr	C, 00108$
                                    160 ;src/main.c:57: }
      000081 33               [ 8]  161 	inc	sp
      000082 33               [ 8]  162 	inc	sp
      000083 C9               [16]  163 	ret
      000084                        164 ___str_0:
      000084 25 63 20               165 	.ascii "%c "
      000087 00                     166 	.db 0x00
                                    167 ;src/main.c:59: U8 gbCountdownSeconds(U8 max_time, U8 start_time)
                                    168 ;	---------------------------------
                                    169 ; Function gbCountdownSeconds
                                    170 ; ---------------------------------
      000088                        171 _gbCountdownSeconds::
      000088 6F               [ 4]  172 	ld	l, a
                                    173 ;	spillPairReg hl
                                    174 ;	spillPairReg hl
                                    175 ;src/main.c:61: return max_time - ((time(NULL)-start_time) % (max_time+1));
      000089 E5               [16]  176 	push	hl
      00008A D5               [16]  177 	push	de
      00008B 11 00 00         [12]  178 	ld	de, #0x0000
      00008E CDr00r00         [24]  179 	call	_time
      000091 D1               [12]  180 	pop	de
      000092 E1               [12]  181 	pop	hl
      000093 79               [ 4]  182 	ld	a, c
      000094 16 00            [ 8]  183 	ld	d, #0x00
      000096 93               [ 4]  184 	sub	a, e
      000097 5F               [ 4]  185 	ld	e, a
      000098 78               [ 4]  186 	ld	a, b
      000099 9A               [ 4]  187 	sbc	a, d
      00009A 57               [ 4]  188 	ld	d, a
      00009B 4D               [ 4]  189 	ld	c, l
      00009C 06 00            [ 8]  190 	ld	b, #0x00
      00009E 03               [ 8]  191 	inc	bc
      00009F E5               [16]  192 	push	hl
      0000A0 CDr00r00         [24]  193 	call	__moduint
      0000A3 E1               [12]  194 	pop	hl
      0000A4 7D               [ 4]  195 	ld	a, l
      0000A5 91               [ 4]  196 	sub	a, c
                                    197 ;src/main.c:62: }
      0000A6 C9               [16]  198 	ret
                                    199 ;src/main.c:64: void main()
                                    200 ;	---------------------------------
                                    201 ; Function main
                                    202 ; ---------------------------------
      0000A7                        203 _main::
      0000A7 E8 C0            [16]  204 	add	sp, #-64
                                    205 ;src/main.c:66: DISPLAY_ON;
      0000A9 F0r00            [12]  206 	ldh	a, (_LCDC_REG + 0)
      0000AB F6 80            [ 8]  207 	or	a, #0x80
      0000AD E0r00            [12]  208 	ldh	(_LCDC_REG + 0), a
                                    209 ;src/main.c:71: start_time  = time(NULL);
      0000AF 11 00 00         [12]  210 	ld	de, #0x0000
      0000B2 CDr00r00         [24]  211 	call	_time
                                    212 ;src/main.c:75: initrand(start_time);
      0000B5 06 00            [ 8]  213 	ld	b, #0x00
      0000B7 C5               [16]  214 	push	bc
      0000B8 CDr00r00         [24]  215 	call	_initrand
      0000BB E1               [12]  216 	pop	hl
                                    217 ;src/main.c:77: gbInitTiles(&state);
      0000BC 21 00 00         [12]  218 	ld	hl, #0
      0000BF 39               [ 8]  219 	add	hl, sp
      0000C0 5D               [ 4]  220 	ld	e, l
      0000C1 54               [ 4]  221 	ld	d, h
      0000C2 CDr00r00         [24]  222 	call	_gbInitTiles
                                    223 ;src/main.c:78: printf("%d\n", countdown);
      0000C5 11 00 00         [12]  224 	ld	de, #0x0000
      0000C8 D5               [16]  225 	push	de
      0000C9 11rF2r00         [12]  226 	ld	de, #___str_1
      0000CC D5               [16]  227 	push	de
      0000CD CDr00r00         [24]  228 	call	_printf
      0000D0 E8 04            [16]  229 	add	sp, #4
                                    230 ;src/main.c:79: gbPrintTiles(&state);
      0000D2 21 00 00         [12]  231 	ld	hl, #0
      0000D5 39               [ 8]  232 	add	hl, sp
      0000D6 5D               [ 4]  233 	ld	e, l
      0000D7 54               [ 4]  234 	ld	d, h
      0000D8 CDr24r00         [24]  235 	call	_gbPrintTiles
                                    236 ;src/main.c:81: while(1)
      0000DB                        237 00102$:
                                    238 ;src/main.c:83: input = joypad();
      0000DB CDr00r00         [24]  239 	call	_joypad
                                    240 ;src/main.c:85: rng_val = rand();    
      0000DE CDr00r00         [24]  241 	call	_rand
                                    242 ;src/main.c:86: printf("%d\n", rng_val);
      0000E1 16 00            [ 8]  243 	ld	d, #0x00
      0000E3 D5               [16]  244 	push	de
      0000E4 11rF2r00         [12]  245 	ld	de, #___str_1
      0000E7 D5               [16]  246 	push	de
      0000E8 CDr00r00         [24]  247 	call	_printf
      0000EB E8 04            [16]  248 	add	sp, #4
      0000ED 18 EC            [12]  249 	jr	00102$
                                    250 ;src/main.c:93: }
      0000EF E8 40            [16]  251 	add	sp, #64
      0000F1 C9               [16]  252 	ret
      0000F2                        253 ___str_1:
      0000F2 25 64                  254 	.ascii "%d"
      0000F4 0A                     255 	.db 0x0a
      0000F5 00                     256 	.db 0x00
                                    257 	.area _CODE
                                    258 	.area _INITIALIZER
                                    259 	.area _CABS (ABS)
